# Git Init

move into folder with cd

initialize git
	git init

add all files
	git add .

check which files are to be added
	git status

commit with message
	git commit -m "<Message>"

set up where to push (initialize repo with https)
	git remote add origin https://github.com/jasonoreilly/repro-ml.git

psuh changes to remote repo
	git push -u origin master


# DVC Init

initialize dvc
	dvc init

add remote data repository
	dvc remote add -d localremote /tmp/dvc-storage

disable analytics tracking
	dvc config core.analytics false

commit changes to git (see above)


# Pipenv Init
create Pipfile with [[source]] [dev-packages] [packages] [requires]

run pipenv install --dev to install packages


# DVC pipeline

make pipeline reproducible
	dvc run -d studentpredictor/create_dataset.py \
	    -o assets/data \
	    -n dataset_creator \
	    --verbose \
	    python3 studentpredictor/create_dataset.py

explanation of parameters
	-d studentpredictor/create_dataset.py 	adds this script as a dependency for this step
	-o assets/data 							tells that the outputs will be stored in that directory
	-n dataset_creator						naming
	--verbose								run script as python3 (important difference from python!)


dvc run -d studentpredictor/create_features.py \
    -d assets/data \
    -o assets/features \
    -n feature_creator \
	--verbose \
	    python3 studentpredictor/create_features.py


dvc run -d studentpredictor/train_model.py \
    -d assets/features \
    -o assets/models \
    -n model_trainer \
    --verbose \
    	python3 studentpredictor/train_model.py


dvc run -d studentpredictor/evaluate_model.py \
    -d assets/features \
    -d assets/models \
    -M assets/metrics.json \
    -n evaluator \
    --verbose \
    	python3 studentpredictor/evaluate_model.py


add tag to experiment
	git tag -a "lr-experiment" -m "Experiment with Linear Regression"

inspect metrics via dvc
	dvc metrics show -T

